syntax = "v1"

info(
    title: "user service api"
    desc: "user service api"
    author: "Blizzard"
    email: "blizzardzhang@icloud.com"
    version: "0.0.1"
)

type (
    AddClientReq {
        Name string `json:"name"`
        Remark string `json:"remark"`
        ClientId string `json:"clientId"`
        ClientSecret string `json:"clientSecret"`
        ClientKey string `json:"clientKey"`
        AdditionalInfo string `json:"additionalInfo"`
        GrantType string `json:"grantType"`
        ExpireIn int64 `json:"expireIn"`
        RefreshAfter int64 `json:"refreshAfter"`
    }
    AddClientResp {
        data string `json:"data"`
    }

    ClientInfoReq {
        Id string `json:"id"`
    }
    ClientData {
        Id string `json:"id"`
        Name string `json:"name"`
        Remark string `json:"remark"`
        ClientId string `json:"clientId"`
        ClientSecret string `json:"clientSecret"`
        ClientKey string `json:"clientKey"`
        AdditionalInfo string `json:"additionalInfo"`
        GrantType string `json:"grantType"`
        ExpireIn int64 `json:"expireIn"`
        RefreshAfter int64 `json:"refreshAfter"`
        Status int64 `json:"status"`
        IsDeleted int64 `json:"isDeleted"`
    }

    ListClientReq {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=10"`
        Name string `json:"name,optional"`
    }
    ListClientResp {
        Data []ClientData `json:"data"`
        Current int64 `json:"current"`
        PageSize int64 `json:"pageSize"`
        Total int64 `json:"total"`
        TotalPage int64 `json:"totalPage"`
    }

    UpdateClientReq {
        Id string `json:"id"`
        Name string `json:"name"`
        Remark string `json:"remark"`
        Status int64 `json:"status"`
    }
    UpdateClientResp {
        data string `json:"data"`
    }

    DeleteClientReq {
        Id []string `json:"ids"`
    }
    DeleteClientResp {
        data string `json:"data"`
    }
)



@server(
    jwt: Auth
    group: sys/client
    middleware: CheckUrl
    prefix: /api/client
)
service storm-api {
   // @doc "新增客户端"
    @handler ClientAdd
    post /add (AddClientReq) returns (AddClientResp)

    //@doc "客户端分页"
    @handler ClientList
    post /list (ListClientReq) returns (ListClientResp)

   // @doc "客户端详情""
    @handler ClientInfo
    get /info (ClientInfoReq) returns (ClientData)

   // @doc "修改客户端"
    @handler ClientUpdate
    post /update (UpdateClientReq) returns (UpdateClientResp)

   // @doc "删除客户端"
    @handler ClientDelete
    delete /delete (DeleteClientReq) returns (DeleteClientResp)
}

