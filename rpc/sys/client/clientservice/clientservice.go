// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package clientservice

import (
	"context"

	"code-storm/rpc/sys/sysclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddClientReq     = sysclient.AddClientReq
	AddClientResp    = sysclient.AddClientResp
	ClientInfoReq    = sysclient.ClientInfoReq
	ClientInfoResp   = sysclient.ClientInfoResp
	DeleteClientReq  = sysclient.DeleteClientReq
	DeleteClientResp = sysclient.DeleteClientResp
	ListClientReq    = sysclient.ListClientReq
	ListClientResp   = sysclient.ListClientResp
	UpdateClientReq  = sysclient.UpdateClientReq
	UpdateClientResp = sysclient.UpdateClientResp

	ClientService interface {
		ClientAdd(ctx context.Context, in *AddClientReq, opts ...grpc.CallOption) (*AddClientResp, error)
		ClientInfo(ctx context.Context, in *ClientInfoReq, opts ...grpc.CallOption) (*ClientInfoResp, error)
		ClientList(ctx context.Context, in *ListClientReq, opts ...grpc.CallOption) (*ListClientResp, error)
		ClientUpdate(ctx context.Context, in *UpdateClientReq, opts ...grpc.CallOption) (*UpdateClientResp, error)
		ClientDelete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientResp, error)
	}

	defaultClientService struct {
		cli zrpc.Client
	}
)

func NewClientService(cli zrpc.Client) ClientService {
	return &defaultClientService{
		cli: cli,
	}
}

func (m *defaultClientService) ClientAdd(ctx context.Context, in *AddClientReq, opts ...grpc.CallOption) (*AddClientResp, error) {
	client := sysclient.NewClientServiceClient(m.cli.Conn())
	return client.ClientAdd(ctx, in, opts...)
}

func (m *defaultClientService) ClientInfo(ctx context.Context, in *ClientInfoReq, opts ...grpc.CallOption) (*ClientInfoResp, error) {
	client := sysclient.NewClientServiceClient(m.cli.Conn())
	return client.ClientInfo(ctx, in, opts...)
}

func (m *defaultClientService) ClientList(ctx context.Context, in *ListClientReq, opts ...grpc.CallOption) (*ListClientResp, error) {
	client := sysclient.NewClientServiceClient(m.cli.Conn())
	return client.ClientList(ctx, in, opts...)
}

func (m *defaultClientService) ClientUpdate(ctx context.Context, in *UpdateClientReq, opts ...grpc.CallOption) (*UpdateClientResp, error) {
	client := sysclient.NewClientServiceClient(m.cli.Conn())
	return client.ClientUpdate(ctx, in, opts...)
}

func (m *defaultClientService) ClientDelete(ctx context.Context, in *DeleteClientReq, opts ...grpc.CallOption) (*DeleteClientResp, error) {
	client := sysclient.NewClientServiceClient(m.cli.Conn())
	return client.ClientDelete(ctx, in, opts...)
}
