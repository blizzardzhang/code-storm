// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"code-storm/rpc/sys/internal/logic/permissionservice"
	"code-storm/rpc/sys/internal/svc"
	"code-storm/rpc/sys/sysClient"
)

type PermissionServiceServer struct {
	svcCtx *svc.ServiceContext
	sysClient.UnimplementedPermissionServiceServer
}

func NewPermissionServiceServer(svcCtx *svc.ServiceContext) *PermissionServiceServer {
	return &PermissionServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *PermissionServiceServer) PermissionAdd(ctx context.Context, in *sysClient.AddPermissionReq) (*sysClient.AddPermissionResp, error) {
	l := permissionservicelogic.NewPermissionAddLogic(ctx, s.svcCtx)
	return l.PermissionAdd(in)
}

func (s *PermissionServiceServer) PermissionInfo(ctx context.Context, in *sysClient.PermissionInfoReq) (*sysClient.PermissionInfoResp, error) {
	l := permissionservicelogic.NewPermissionInfoLogic(ctx, s.svcCtx)
	return l.PermissionInfo(in)
}

func (s *PermissionServiceServer) PermissionList(ctx context.Context, in *sysClient.ListPermissionReq) (*sysClient.ListPermissionResp, error) {
	l := permissionservicelogic.NewPermissionListLogic(ctx, s.svcCtx)
	return l.PermissionList(in)
}

func (s *PermissionServiceServer) PermissionUpdate(ctx context.Context, in *sysClient.UpdatePermissionReq) (*sysClient.UpdatePermissionResp, error) {
	l := permissionservicelogic.NewPermissionUpdateLogic(ctx, s.svcCtx)
	return l.PermissionUpdate(in)
}

func (s *PermissionServiceServer) PermissionDelete(ctx context.Context, in *sysClient.DeletePermissionReq) (*sysClient.DeletePermissionResp, error) {
	l := permissionservicelogic.NewPermissionDeleteLogic(ctx, s.svcCtx)
	return l.PermissionDelete(in)
}
